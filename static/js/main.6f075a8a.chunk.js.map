{"version":3,"sources":["Snake.js","food.js","App.js","index.js"],"names":["props","snakeDots","map","dot","i","style","left","top","className","key","getRandomCoordinates","Math","floor","random","initialState","speed","food","direction","App","state","onkeydown","e","window","event","keyCode","console","log","setState","moveSnake","dots","head","length","push","shift","setInterval","this","document","checkIfEat","checkIfCollapsed","checkIfOutBorders","onGameOver","increaseSpeed","enlargeSnake","newSnake","unshift","alert","snake","pop","forEach","onGameOverCollapsed","Snake","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f075a8a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default (props) => {\r\n  \r\n    return (\r\n      <div>\r\n        {props.snakeDots.map((dot, i)=>{\r\n          const style={\r\n            left: `${dot[0]}%`,\r\n            top: `${dot[1]}%`\r\n          }\r\n          return (\r\n            <div className=\"snake-dot\" key={i} style={style}/>\r\n          )\r\n        })}\r\n        </div>\r\n    );\r\n  }\r\n ","import React from 'react'\r\n\r\nexport default (props)=>{\r\n    const style={\r\n        left: `${props.dot[0]}%`,\r\n        top: `${props.dot[1]}%`\r\n      }\r\n    return (\r\n        <div className=\"snake-food\" style={style}/>\r\n    )\r\n}","import React, { Component } from 'react';\n\nimport Snake from './Snake'\nimport Food from './food'\n\nconst getRandomCoordinates=()=>{\nlet min= 1;\nlet max= 98;\nlet x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\nlet y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\nreturn [x, y]\n}\n\nconst initialState= {speed: 80,\n  food:getRandomCoordinates(),\n  direction: 'RIGHT',\n  snakeDots:[\n    [0,0],\n    [2,0]\n\n  ]}\nclass App extends Component {\n  \n  state= initialState;\n  \n\n  componentDidMount(){\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onkeydown;\n\n  }\n\n  onkeydown = (e) =>{\n    e=e || window.event;\n    switch(e.keyCode){\n      case 38:\n        console.log(\"Made By Mk\")\n      this.setState({direction: 'UP'});\n      break;\n      case 40:\n      this.setState({direction: 'DOWN'});\n      break;\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n      }\n  }\n \n\n  componentDidUpdate(){\n    this.checkIfEat();\n    this.checkIfCollapsed();\n    this.checkIfOutBorders();\n  }\n\nmoveSnake=()=>{\nlet dots = [...this.state.snakeDots];\nlet head = dots[dots.length -1];\n  switch(this.state.direction){\n    case 'RIGHT':\n      head = [head[0] + 2, head[1]];\n      break;\n    case 'LEFT':\n      head = [head[0]-2, head[1]];\n      break;\n    case 'UP':\n      head = [head[0], head[1]-2];\n      break;\n    case 'DOWN':\n      head = [head[0], head[1]+2];\n      break;    \n  }\n  dots.push(head);\n  dots.shift();\n  this.setState({\n    snakeDots: dots\n  })\n}\n\ncheckIfOutBorders(){\n  let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n  if(head[0] >= 100 || head[1] >=100||head[0] < 0|| head[1] < 0 ){\n   this.onGameOver();\n  }\n}\n\ncheckIfEat(){\n  let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n  let food = this.state.food;\n  if(head[0]===food[0] && head[1] === food[1]){\n  this.setState({\n    food: getRandomCoordinates()\n  })\n  console.log(this.state.speed)\n  this.increaseSpeed();\n  this.enlargeSnake();\n  }\n   \n}\n\nenlargeSnake(){\n  let newSnake = [...this.state.snakeDots];\n  newSnake.unshift([]);\n  this.setState({\n    snakeDots: newSnake\n  })\n}\n\nincreaseSpeed()\n{\n  if(this.state.speed > 5){\n    this.setState({\n      speed: this.state.speed - 5\n    })\n  }\n  \n}\nonGameOver(){\n  alert(`OOfs...don't try to go outside, Stay Home Stay Safe..your Score: ${this.state.snakeDots.length}`);\nthis.setState(initialState)\n}\n\nonGameOverCollapsed(){\n  alert(`You have Eaten yourself...DAMN...your score is :${this.state.snakeDots.length}`);\n  this.setState(initialState)\n\n}\n\n\n\ncheckIfCollapsed(){\n  let snake = [...this.state.snakeDots];\n  let head = snake[snake.length - 1];\n  snake.pop();\n  snake.forEach(dot => {\n    if(head[0] === dot[0] && head[1] === dot[1]){\n      // alert(\"You were Collapsed\")\nthis.onGameOverCollapsed();\n    }\n  });\n\n}\n  render(){\n  return (\n    \n    <div className=\"game-area\">\n   <Snake snakeDots={this.state.snakeDots}/>\n   <Food dot={this.state.food}/>\n     </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}